---
/* eslint-disable-next-line import/no-unresolved */
import { getCollection, getDataEntryById } from "astro:content";
import type { InferGetStaticPropsType } from "astro";
import {
  SarkaraLayout,
  ArticleList,
  Paper,
  PaperLink,
  PanelLink,
} from "@cieloazul310/astro-sarkara";
import PostListItem from "@/components/PostListItem.astro";
import CategoryTypeBadge from "@/components/CategoryTypeBadge.astro";
import { menu, siteMetadata } from "@/data";
import mdxClasses from "@/mdx-classes";

import "@/index.css";

export async function getStaticPaths() {
  const allCategories = await getCollection("category");

  return allCategories.map((category) => ({
    params: {
      category: category.id,
    },
    props: {
      category,
    },
  }));
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { category } = Astro.props;

const { name, description, url } = category.data;
const categoryType = await getDataEntryById(
  "categoryType",
  category.data.type.id,
);
const allPost = await getCollection(
  "post",
  (post) =>
    post.data.category.id === category.id &&
    (import.meta.env.PROD ? post.data.draft !== true : true),
);
---

<SarkaraLayout title={name} menu={menu} siteMetadata={siteMetadata}>
  <CategoryTypeBadge slot="jumbotron-header" categoryType={categoryType} />
  {
    (description || url) && (
      <Paper>
        <p>{description}</p>
        {url && (
          <PanelLink class={mdxClasses.a} href={url}>
            {name}
          </PanelLink>
        )}
      </Paper>
    )
  }
  <ArticleList>
    {
      allPost
        .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
        .map((post) => <PostListItem post={post} />)
    }
  </ArticleList>
  <PaperLink href={`/categories/${categoryType.id}`}
    >{categoryType.data.name}</PaperLink
  >
</SarkaraLayout>
