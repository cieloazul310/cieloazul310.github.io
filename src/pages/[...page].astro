---
/* eslint-disable-next-line import/no-unresolved */
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions, InferGetStaticPropsType } from "astro";
import {
  SarkaraLayout,
  ArticleList,
  Pagination,
} from "@cieloazul310/astro-sarkara";
import Analytics from "../components/Analytics.astro";
import PostListItem from "../components/PostListItem.astro";
import { pageSize, menu, siteMetadata } from "../data";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  // Load your data with fetch(), Astro.glob(), etc.
  const allPost = await getCollection("post", ({ data }) =>
    import.meta.env.PROD ? data.draft !== true : true,
  );
  const post = allPost.sort(
    (a, b) => b.data.date.getTime() - a.data.date.getTime(),
  );

  // Return a paginated collection of paths for all post
  return paginate(post, { pageSize });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { page } = Astro.props;
---

<SarkaraLayout siteMetadata={siteMetadata} menu={menu}>
  <Analytics slot="top-of-head" />
  <Fragment slot="jumbotron-footer">
    {page.currentPage !== 1 && `(${page.currentPage}/${page.lastPage})`}
  </Fragment>
  <ArticleList>
    {page.data.map((post) => <PostListItem post={post} />)}
  </ArticleList>
  <Pagination page={page} basePath="/" />
</SarkaraLayout>
